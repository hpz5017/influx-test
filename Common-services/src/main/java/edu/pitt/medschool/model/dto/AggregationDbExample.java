package edu.pitt.medschool.model.dto;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Date;

public class AggregationDbExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public AggregationDbExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andVersionIsNull() {
			addCriterion("version is null");
			return (Criteria) this;
		}

		public Criteria andVersionIsNotNull() {
			addCriterion("version is not null");
			return (Criteria) this;
		}

		public Criteria andVersionEqualTo(Integer value) {
			addCriterion("version =", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotEqualTo(Integer value) {
			addCriterion("version <>", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionGreaterThan(Integer value) {
			addCriterion("version >", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
			addCriterion("version >=", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionLessThan(Integer value) {
			addCriterion("version <", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionLessThanOrEqualTo(Integer value) {
			addCriterion("version <=", value, "version");
			return (Criteria) this;
		}

		public Criteria andVersionIn(List<Integer> values) {
			addCriterion("version in", values, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotIn(List<Integer> values) {
			addCriterion("version not in", values, "version");
			return (Criteria) this;
		}

		public Criteria andVersionBetween(Integer value1, Integer value2) {
			addCriterion("version between", value1, value2, "version");
			return (Criteria) this;
		}

		public Criteria andVersionNotBetween(Integer value1, Integer value2) {
			addCriterion("version not between", value1, value2, "version");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(String value) {
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(String value) {
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(String value) {
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(String value) {
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("status like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("status not like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<String> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<String> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andTotalIsNull() {
			addCriterion("total is null");
			return (Criteria) this;
		}

		public Criteria andTotalIsNotNull() {
			addCriterion("total is not null");
			return (Criteria) this;
		}

		public Criteria andTotalEqualTo(Integer value) {
			addCriterion("total =", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalNotEqualTo(Integer value) {
			addCriterion("total <>", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalGreaterThan(Integer value) {
			addCriterion("total >", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalGreaterThanOrEqualTo(Integer value) {
			addCriterion("total >=", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalLessThan(Integer value) {
			addCriterion("total <", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalLessThanOrEqualTo(Integer value) {
			addCriterion("total <=", value, "total");
			return (Criteria) this;
		}

		public Criteria andTotalIn(List<Integer> values) {
			addCriterion("total in", values, "total");
			return (Criteria) this;
		}

		public Criteria andTotalNotIn(List<Integer> values) {
			addCriterion("total not in", values, "total");
			return (Criteria) this;
		}

		public Criteria andTotalBetween(Integer value1, Integer value2) {
			addCriterion("total between", value1, value2, "total");
			return (Criteria) this;
		}

		public Criteria andTotalNotBetween(Integer value1, Integer value2) {
			addCriterion("total not between", value1, value2, "total");
			return (Criteria) this;
		}

		public Criteria andFinishedIsNull() {
			addCriterion("finished is null");
			return (Criteria) this;
		}

		public Criteria andFinishedIsNotNull() {
			addCriterion("finished is not null");
			return (Criteria) this;
		}

		public Criteria andFinishedEqualTo(Integer value) {
			addCriterion("finished =", value, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedNotEqualTo(Integer value) {
			addCriterion("finished <>", value, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedGreaterThan(Integer value) {
			addCriterion("finished >", value, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedGreaterThanOrEqualTo(Integer value) {
			addCriterion("finished >=", value, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedLessThan(Integer value) {
			addCriterion("finished <", value, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedLessThanOrEqualTo(Integer value) {
			addCriterion("finished <=", value, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedIn(List<Integer> values) {
			addCriterion("finished in", values, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedNotIn(List<Integer> values) {
			addCriterion("finished not in", values, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedBetween(Integer value1, Integer value2) {
			addCriterion("finished between", value1, value2, "finished");
			return (Criteria) this;
		}

		public Criteria andFinishedNotBetween(Integer value1, Integer value2) {
			addCriterion("finished not between", value1, value2, "finished");
			return (Criteria) this;
		}

		public Criteria andArtypeIsNull() {
			addCriterion("arType is null");
			return (Criteria) this;
		}

		public Criteria andArtypeIsNotNull() {
			addCriterion("arType is not null");
			return (Criteria) this;
		}

		public Criteria andArtypeEqualTo(Boolean value) {
			addCriterion("arType =", value, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeNotEqualTo(Boolean value) {
			addCriterion("arType <>", value, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeGreaterThan(Boolean value) {
			addCriterion("arType >", value, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeGreaterThanOrEqualTo(Boolean value) {
			addCriterion("arType >=", value, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeLessThan(Boolean value) {
			addCriterion("arType <", value, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeLessThanOrEqualTo(Boolean value) {
			addCriterion("arType <=", value, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeIn(List<Boolean> values) {
			addCriterion("arType in", values, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeNotIn(List<Boolean> values) {
			addCriterion("arType not in", values, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeBetween(Boolean value1, Boolean value2) {
			addCriterion("arType between", value1, value2, "artype");
			return (Criteria) this;
		}

		public Criteria andArtypeNotBetween(Boolean value1, Boolean value2) {
			addCriterion("arType not between", value1, value2, "artype");
			return (Criteria) this;
		}

		public Criteria andTimeCostIsNull() {
			addCriterion("time_cost is null");
			return (Criteria) this;
		}

		public Criteria andTimeCostIsNotNull() {
			addCriterion("time_cost is not null");
			return (Criteria) this;
		}

		public Criteria andTimeCostEqualTo(String value) {
			addCriterion("time_cost =", value, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostNotEqualTo(String value) {
			addCriterion("time_cost <>", value, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostGreaterThan(String value) {
			addCriterion("time_cost >", value, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostGreaterThanOrEqualTo(String value) {
			addCriterion("time_cost >=", value, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostLessThan(String value) {
			addCriterion("time_cost <", value, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostLessThanOrEqualTo(String value) {
			addCriterion("time_cost <=", value, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostLike(String value) {
			addCriterion("time_cost like", value, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostNotLike(String value) {
			addCriterion("time_cost not like", value, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostIn(List<String> values) {
			addCriterion("time_cost in", values, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostNotIn(List<String> values) {
			addCriterion("time_cost not in", values, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostBetween(String value1, String value2) {
			addCriterion("time_cost between", value1, value2, "timeCost");
			return (Criteria) this;
		}

		public Criteria andTimeCostNotBetween(String value1, String value2) {
			addCriterion("time_cost not between", value1, value2, "timeCost");
			return (Criteria) this;
		}

		public Criteria andNdayIsNull() {
			addCriterion("nday is null");
			return (Criteria) this;
		}

		public Criteria andNdayIsNotNull() {
			addCriterion("nday is not null");
			return (Criteria) this;
		}

		public Criteria andNdayEqualTo(Integer value) {
			addCriterion("nday =", value, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayNotEqualTo(Integer value) {
			addCriterion("nday <>", value, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayGreaterThan(Integer value) {
			addCriterion("nday >", value, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayGreaterThanOrEqualTo(Integer value) {
			addCriterion("nday >=", value, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayLessThan(Integer value) {
			addCriterion("nday <", value, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayLessThanOrEqualTo(Integer value) {
			addCriterion("nday <=", value, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayIn(List<Integer> values) {
			addCriterion("nday in", values, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayNotIn(List<Integer> values) {
			addCriterion("nday not in", values, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayBetween(Integer value1, Integer value2) {
			addCriterion("nday between", value1, value2, "nday");
			return (Criteria) this;
		}

		public Criteria andNdayNotBetween(Integer value1, Integer value2) {
			addCriterion("nday not between", value1, value2, "nday");
			return (Criteria) this;
		}

		public Criteria andCommentIsNull() {
			addCriterion("comment is null");
			return (Criteria) this;
		}

		public Criteria andCommentIsNotNull() {
			addCriterion("comment is not null");
			return (Criteria) this;
		}

		public Criteria andCommentEqualTo(String value) {
			addCriterion("comment =", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotEqualTo(String value) {
			addCriterion("comment <>", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentGreaterThan(String value) {
			addCriterion("comment >", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentGreaterThanOrEqualTo(String value) {
			addCriterion("comment >=", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLessThan(String value) {
			addCriterion("comment <", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLessThanOrEqualTo(String value) {
			addCriterion("comment <=", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentLike(String value) {
			addCriterion("comment like", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotLike(String value) {
			addCriterion("comment not like", value, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentIn(List<String> values) {
			addCriterion("comment in", values, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotIn(List<String> values) {
			addCriterion("comment not in", values, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentBetween(String value1, String value2) {
			addCriterion("comment between", value1, value2, "comment");
			return (Criteria) this;
		}

		public Criteria andCommentNotBetween(String value1, String value2) {
			addCriterion("comment not between", value1, value2, "comment");
			return (Criteria) this;
		}

		public Criteria andDbSizeIsNull() {
			addCriterion("db_size is null");
			return (Criteria) this;
		}

		public Criteria andDbSizeIsNotNull() {
			addCriterion("db_size is not null");
			return (Criteria) this;
		}

		public Criteria andDbSizeEqualTo(Integer value) {
			addCriterion("db_size =", value, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeNotEqualTo(Integer value) {
			addCriterion("db_size <>", value, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeGreaterThan(Integer value) {
			addCriterion("db_size >", value, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeGreaterThanOrEqualTo(Integer value) {
			addCriterion("db_size >=", value, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeLessThan(Integer value) {
			addCriterion("db_size <", value, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeLessThanOrEqualTo(Integer value) {
			addCriterion("db_size <=", value, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeIn(List<Integer> values) {
			addCriterion("db_size in", values, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeNotIn(List<Integer> values) {
			addCriterion("db_size not in", values, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeBetween(Integer value1, Integer value2) {
			addCriterion("db_size between", value1, value2, "dbSize");
			return (Criteria) this;
		}

		public Criteria andDbSizeNotBetween(Integer value1, Integer value2) {
			addCriterion("db_size not between", value1, value2, "dbSize");
			return (Criteria) this;
		}

		public Criteria andStatusLikeInsensitive(String value) {
			addCriterion("upper(status) like", value.toUpperCase(), "status");
			return (Criteria) this;
		}

		public Criteria andTimeCostLikeInsensitive(String value) {
			addCriterion("upper(time_cost) like", value.toUpperCase(), "timeCost");
			return (Criteria) this;
		}

		public Criteria andCommentLikeInsensitive(String value) {
			addCriterion("upper(comment) like", value.toUpperCase(), "comment");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table aggregation_db
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table aggregation_db
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}