package edu.pitt.medschool.model.mapper;

import edu.pitt.medschool.model.dto.InfluxCluster;
import edu.pitt.medschool.model.dto.InfluxClusterExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface InfluxClusterMapper {

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @SelectProvider(type = InfluxClusterSqlProvider.class, method = "countByExample")
    long countByExample(InfluxClusterExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @DeleteProvider(type = InfluxClusterSqlProvider.class, method = "deleteByExample")
    int deleteByExample(InfluxClusterExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @Delete({ "delete from influx_cluster", "where id = #{id,jdbcType=INTEGER}" })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @Insert({ "insert into influx_cluster (id, cluster_id, ", "machine_id, ip_addr, ", "fail_path)", "values (#{id,jdbcType=INTEGER}, #{clusterId,jdbcType=VARCHAR}, ",
            "#{machineId,jdbcType=VARCHAR}, #{ipAddr,jdbcType=VARCHAR}, ", "#{failPath,jdbcType=VARCHAR})" })
    int insert(InfluxCluster record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @InsertProvider(type = InfluxClusterSqlProvider.class, method = "insertSelective")
    int insertSelective(InfluxCluster record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @SelectProvider(type = InfluxClusterSqlProvider.class, method = "selectByExample")
    @Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true), @Result(column = "cluster_id", property = "clusterId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "machine_id", property = "machineId", jdbcType = JdbcType.VARCHAR), @Result(column = "ip_addr", property = "ipAddr", jdbcType = JdbcType.VARCHAR),
            @Result(column = "fail_path", property = "failPath", jdbcType = JdbcType.VARCHAR) })
    List<InfluxCluster> selectByExampleWithRowbounds(InfluxClusterExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @SelectProvider(type = InfluxClusterSqlProvider.class, method = "selectByExample")
    @Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true), @Result(column = "cluster_id", property = "clusterId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "machine_id", property = "machineId", jdbcType = JdbcType.VARCHAR), @Result(column = "ip_addr", property = "ipAddr", jdbcType = JdbcType.VARCHAR),
            @Result(column = "fail_path", property = "failPath", jdbcType = JdbcType.VARCHAR) })
    List<InfluxCluster> selectByExample(InfluxClusterExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @Select({ "select", "id, cluster_id, machine_id, ip_addr, fail_path", "from influx_cluster", "where id = #{id,jdbcType=INTEGER}" })
    @Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true), @Result(column = "cluster_id", property = "clusterId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "machine_id", property = "machineId", jdbcType = JdbcType.VARCHAR), @Result(column = "ip_addr", property = "ipAddr", jdbcType = JdbcType.VARCHAR),
            @Result(column = "fail_path", property = "failPath", jdbcType = JdbcType.VARCHAR) })
    InfluxCluster selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @UpdateProvider(type = InfluxClusterSqlProvider.class, method = "updateByExampleSelective")
    int updateByExampleSelective(@Param("record") InfluxCluster record, @Param("example") InfluxClusterExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @UpdateProvider(type = InfluxClusterSqlProvider.class, method = "updateByExample")
    int updateByExample(@Param("record") InfluxCluster record, @Param("example") InfluxClusterExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @UpdateProvider(type = InfluxClusterSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(InfluxCluster record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table influx_cluster
     * @mbg.generated
     */
    @Update({ "update influx_cluster", "set cluster_id = #{clusterId,jdbcType=VARCHAR},", "machine_id = #{machineId,jdbcType=VARCHAR},", "ip_addr = #{ipAddr,jdbcType=VARCHAR},",
            "fail_path = #{failPath,jdbcType=VARCHAR}", "where id = #{id,jdbcType=INTEGER}" })
    int updateByPrimaryKey(InfluxCluster record);
}