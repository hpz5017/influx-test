package edu.pitt.medschool.model.mapper;

import edu.pitt.medschool.model.dto.ImportLog;
import edu.pitt.medschool.model.dto.ImportLogExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface ImportLogMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@SelectProvider(type = ImportLogSqlProvider.class, method = "countByExample")
	long countByExample(ImportLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@DeleteProvider(type = ImportLogSqlProvider.class, method = "deleteByExample")
	int deleteByExample(ImportLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@Delete({ "delete from import_log", "where id = #{id,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@Insert({ "insert into import_log (id, uuid, ", "batch_id, filename, ", "status, timestamp, ",
			"all_percent, this_percent, ", "all_file_size, this_file_size, ", "lost, reason)",
			"values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, ",
			"#{batchId,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR}, ",
			"#{status,jdbcType=VARCHAR}, #{timestamp,jdbcType=TIMESTAMP}, ",
			"#{allPercent,jdbcType=DOUBLE}, #{thisPercent,jdbcType=DOUBLE}, ",
			"#{allFileSize,jdbcType=BIGINT}, #{thisFileSize,jdbcType=BIGINT}, ",
			"#{lost,jdbcType=BIT}, #{reason,jdbcType=LONGVARCHAR})" })
	int insert(ImportLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@InsertProvider(type = ImportLogSqlProvider.class, method = "insertSelective")
	int insertSelective(ImportLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@SelectProvider(type = ImportLogSqlProvider.class, method = "selectByExampleWithBLOBs")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "uuid", property = "uuid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "batch_id", property = "batchId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filename", property = "filename", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "timestamp", property = "timestamp", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "all_percent", property = "allPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "this_percent", property = "thisPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "all_file_size", property = "allFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "this_file_size", property = "thisFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "lost", property = "lost", jdbcType = JdbcType.BIT),
			@Result(column = "reason", property = "reason", jdbcType = JdbcType.LONGVARCHAR) })
	List<ImportLog> selectByExampleWithBLOBsWithRowbounds(ImportLogExample example, RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@SelectProvider(type = ImportLogSqlProvider.class, method = "selectByExampleWithBLOBs")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "uuid", property = "uuid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "batch_id", property = "batchId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filename", property = "filename", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "timestamp", property = "timestamp", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "all_percent", property = "allPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "this_percent", property = "thisPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "all_file_size", property = "allFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "this_file_size", property = "thisFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "lost", property = "lost", jdbcType = JdbcType.BIT),
			@Result(column = "reason", property = "reason", jdbcType = JdbcType.LONGVARCHAR) })
	List<ImportLog> selectByExampleWithBLOBs(ImportLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@SelectProvider(type = ImportLogSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "uuid", property = "uuid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "batch_id", property = "batchId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filename", property = "filename", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "timestamp", property = "timestamp", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "all_percent", property = "allPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "this_percent", property = "thisPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "all_file_size", property = "allFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "this_file_size", property = "thisFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "lost", property = "lost", jdbcType = JdbcType.BIT) })
	List<ImportLog> selectByExampleWithRowbounds(ImportLogExample example, RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@SelectProvider(type = ImportLogSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "uuid", property = "uuid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "batch_id", property = "batchId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filename", property = "filename", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "timestamp", property = "timestamp", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "all_percent", property = "allPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "this_percent", property = "thisPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "all_file_size", property = "allFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "this_file_size", property = "thisFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "lost", property = "lost", jdbcType = JdbcType.BIT) })
	List<ImportLog> selectByExample(ImportLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@Select({ "select", "id, uuid, batch_id, filename, status, timestamp, all_percent, this_percent, ",
			"all_file_size, this_file_size, lost, reason", "from import_log", "where id = #{id,jdbcType=INTEGER}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "uuid", property = "uuid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "batch_id", property = "batchId", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filename", property = "filename", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "timestamp", property = "timestamp", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "all_percent", property = "allPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "this_percent", property = "thisPercent", jdbcType = JdbcType.DOUBLE),
			@Result(column = "all_file_size", property = "allFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "this_file_size", property = "thisFileSize", jdbcType = JdbcType.BIGINT),
			@Result(column = "lost", property = "lost", jdbcType = JdbcType.BIT),
			@Result(column = "reason", property = "reason", jdbcType = JdbcType.LONGVARCHAR) })
	ImportLog selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@UpdateProvider(type = ImportLogSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") ImportLog record, @Param("example") ImportLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@UpdateProvider(type = ImportLogSqlProvider.class, method = "updateByExampleWithBLOBs")
	int updateByExampleWithBLOBs(@Param("record") ImportLog record, @Param("example") ImportLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@UpdateProvider(type = ImportLogSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") ImportLog record, @Param("example") ImportLogExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@UpdateProvider(type = ImportLogSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(ImportLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@Update({ "update import_log", "set uuid = #{uuid,jdbcType=VARCHAR},", "batch_id = #{batchId,jdbcType=VARCHAR},",
			"filename = #{filename,jdbcType=VARCHAR},", "status = #{status,jdbcType=VARCHAR},",
			"timestamp = #{timestamp,jdbcType=TIMESTAMP},", "all_percent = #{allPercent,jdbcType=DOUBLE},",
			"this_percent = #{thisPercent,jdbcType=DOUBLE},", "all_file_size = #{allFileSize,jdbcType=BIGINT},",
			"this_file_size = #{thisFileSize,jdbcType=BIGINT},", "lost = #{lost,jdbcType=BIT},",
			"reason = #{reason,jdbcType=LONGVARCHAR}", "where id = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKeyWithBLOBs(ImportLog record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_log
	 * @mbg.generated
	 */
	@Update({ "update import_log", "set uuid = #{uuid,jdbcType=VARCHAR},", "batch_id = #{batchId,jdbcType=VARCHAR},",
			"filename = #{filename,jdbcType=VARCHAR},", "status = #{status,jdbcType=VARCHAR},",
			"timestamp = #{timestamp,jdbcType=TIMESTAMP},", "all_percent = #{allPercent,jdbcType=DOUBLE},",
			"this_percent = #{thisPercent,jdbcType=DOUBLE},", "all_file_size = #{allFileSize,jdbcType=BIGINT},",
			"this_file_size = #{thisFileSize,jdbcType=BIGINT},", "lost = #{lost,jdbcType=BIT}",
			"where id = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKey(ImportLog record);
}