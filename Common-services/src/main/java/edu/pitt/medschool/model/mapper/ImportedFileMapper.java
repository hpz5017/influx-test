package edu.pitt.medschool.model.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultType;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

import edu.pitt.medschool.model.dto.ImportedFile;
import edu.pitt.medschool.model.dto.ImportedFileExample;

@Mapper
public interface ImportedFileMapper {

    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table imported_file
	 * @mbg.generated
	 */
	@SelectProvider(type = ImportedFileSqlProvider.class, method = "countByExample")
	long countByExample(ImportedFileExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table imported_file
	 * @mbg.generated
	 */
	@DeleteProvider(type = ImportedFileSqlProvider.class, method = "deleteByExample")
	int deleteByExample(ImportedFileExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table imported_file
	 * @mbg.generated
	 */
	@Insert({ "insert into imported_file (id, filepath, ", "filename, filelines, ", "filesize, PID, isAr, ",
			"timestamp, uuid, ", "deleted)", "values (#{id,jdbcType=INTEGER}, #{filepath,jdbcType=VARCHAR}, ",
			"#{filename,jdbcType=VARCHAR}, #{filelines,jdbcType=INTEGER}, ",
			"#{filesize,jdbcType=BIGINT}, #{pid,jdbcType=VARCHAR}, #{isar,jdbcType=BIT}, ",
			"#{timestamp,jdbcType=TIMESTAMP}, #{uuid,jdbcType=VARCHAR}, ", "#{deleted,jdbcType=BIT})" })
	int insert(ImportedFile record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table imported_file
	 * @mbg.generated
	 */
	@InsertProvider(type = ImportedFileSqlProvider.class, method = "insertSelective")
	int insertSelective(ImportedFile record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table imported_file
	 * @mbg.generated
	 */
	@SelectProvider(type = ImportedFileSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER),
			@Result(column = "filepath", property = "filepath", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filename", property = "filename", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filelines", property = "filelines", jdbcType = JdbcType.INTEGER),
			@Result(column = "filesize", property = "filesize", jdbcType = JdbcType.BIGINT),
			@Result(column = "PID", property = "pid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "isAr", property = "isar", jdbcType = JdbcType.BIT),
			@Result(column = "timestamp", property = "timestamp", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "uuid", property = "uuid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "deleted", property = "deleted", jdbcType = JdbcType.BIT) })
	List<ImportedFile> selectByExampleWithRowbounds(ImportedFileExample example, RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table imported_file
	 * @mbg.generated
	 */
	@SelectProvider(type = ImportedFileSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER),
			@Result(column = "filepath", property = "filepath", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filename", property = "filename", jdbcType = JdbcType.VARCHAR),
			@Result(column = "filelines", property = "filelines", jdbcType = JdbcType.INTEGER),
			@Result(column = "filesize", property = "filesize", jdbcType = JdbcType.BIGINT),
			@Result(column = "PID", property = "pid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "isAr", property = "isar", jdbcType = JdbcType.BIT),
			@Result(column = "timestamp", property = "timestamp", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "uuid", property = "uuid", jdbcType = JdbcType.VARCHAR),
			@Result(column = "deleted", property = "deleted", jdbcType = JdbcType.BIT) })
	List<ImportedFile> selectByExample(ImportedFileExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table imported_file
	 * @mbg.generated
	 */
	@UpdateProvider(type = ImportedFileSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") ImportedFile record, @Param("example") ImportedFileExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table imported_file
	 * @mbg.generated
	 */
	@UpdateProvider(type = ImportedFileSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") ImportedFile record, @Param("example") ImportedFileExample example);

	@Select({ "SELECT DISTINCT PID", "FROM imported_file", "WHERE uuid = #{uid} AND deleted = 0" })
    @ResultType(String.class)
    @Results({ @Result(column = "PID", property = "PID", jdbcType = JdbcType.VARCHAR) })
    List<String> selectAllImportedPid(String uid);

    @Select({ "SELECT DISTINCT PID", "FROM psc_import_pid_line_count", "ORDER BY PID ASC" })
    @ResultType(String.class)
    @Results({ @Result(column = "PID", property = "PID", jdbcType = JdbcType.VARCHAR) })
    List<String> selectAllImportedPidPSC();

    @Select({ "SELECT DISTINCT PID", "FROM imported_file", "WHERE uuid = #{machineId}", "ORDER BY PID ASC" })
    @ResultType(String.class)
    @Results({ @Result(column = "PID", property = "PID", jdbcType = JdbcType.VARCHAR) })
    List<String> selectAllImportedPidOnMachine(String machineId);

    @Select({"SELECT DISTINCT PID", "FROM imported_file", "WHERE uuid = #{machineId} and PID not like \"TBI%\"", "ORDER BY PID ASC"})
	@ResultType(String.class)
	@Results({ @Result(column = "PID", property = "PID", jdbcType = JdbcType.VARCHAR) })
    List<String> selectAllImportedPidWithoutTBI(String machineId);
}