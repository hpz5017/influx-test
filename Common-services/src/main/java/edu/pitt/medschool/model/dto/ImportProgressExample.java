package edu.pitt.medschool.model.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.time.LocalDateTime;

public class ImportProgressExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table import_progress
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table import_progress
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table import_progress
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public ImportProgressExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table import_progress
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUuidIsNull() {
			addCriterion("uuid is null");
			return (Criteria) this;
		}

		public Criteria andUuidIsNotNull() {
			addCriterion("uuid is not null");
			return (Criteria) this;
		}

		public Criteria andUuidEqualTo(String value) {
			addCriterion("uuid =", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotEqualTo(String value) {
			addCriterion("uuid <>", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidGreaterThan(String value) {
			addCriterion("uuid >", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidGreaterThanOrEqualTo(String value) {
			addCriterion("uuid >=", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLessThan(String value) {
			addCriterion("uuid <", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLessThanOrEqualTo(String value) {
			addCriterion("uuid <=", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidLike(String value) {
			addCriterion("uuid like", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotLike(String value) {
			addCriterion("uuid not like", value, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidIn(List<String> values) {
			addCriterion("uuid in", values, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotIn(List<String> values) {
			addCriterion("uuid not in", values, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidBetween(String value1, String value2) {
			addCriterion("uuid between", value1, value2, "uuid");
			return (Criteria) this;
		}

		public Criteria andUuidNotBetween(String value1, String value2) {
			addCriterion("uuid not between", value1, value2, "uuid");
			return (Criteria) this;
		}

		public Criteria andBatchIdIsNull() {
			addCriterion("batch_id is null");
			return (Criteria) this;
		}

		public Criteria andBatchIdIsNotNull() {
			addCriterion("batch_id is not null");
			return (Criteria) this;
		}

		public Criteria andBatchIdEqualTo(String value) {
			addCriterion("batch_id =", value, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdNotEqualTo(String value) {
			addCriterion("batch_id <>", value, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdGreaterThan(String value) {
			addCriterion("batch_id >", value, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdGreaterThanOrEqualTo(String value) {
			addCriterion("batch_id >=", value, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdLessThan(String value) {
			addCriterion("batch_id <", value, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdLessThanOrEqualTo(String value) {
			addCriterion("batch_id <=", value, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdLike(String value) {
			addCriterion("batch_id like", value, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdNotLike(String value) {
			addCriterion("batch_id not like", value, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdIn(List<String> values) {
			addCriterion("batch_id in", values, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdNotIn(List<String> values) {
			addCriterion("batch_id not in", values, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdBetween(String value1, String value2) {
			addCriterion("batch_id between", value1, value2, "batchId");
			return (Criteria) this;
		}

		public Criteria andBatchIdNotBetween(String value1, String value2) {
			addCriterion("batch_id not between", value1, value2, "batchId");
			return (Criteria) this;
		}

		public Criteria andFilenameIsNull() {
			addCriterion("filename is null");
			return (Criteria) this;
		}

		public Criteria andFilenameIsNotNull() {
			addCriterion("filename is not null");
			return (Criteria) this;
		}

		public Criteria andFilenameEqualTo(String value) {
			addCriterion("filename =", value, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameNotEqualTo(String value) {
			addCriterion("filename <>", value, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameGreaterThan(String value) {
			addCriterion("filename >", value, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameGreaterThanOrEqualTo(String value) {
			addCriterion("filename >=", value, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameLessThan(String value) {
			addCriterion("filename <", value, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameLessThanOrEqualTo(String value) {
			addCriterion("filename <=", value, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameLike(String value) {
			addCriterion("filename like", value, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameNotLike(String value) {
			addCriterion("filename not like", value, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameIn(List<String> values) {
			addCriterion("filename in", values, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameNotIn(List<String> values) {
			addCriterion("filename not in", values, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameBetween(String value1, String value2) {
			addCriterion("filename between", value1, value2, "filename");
			return (Criteria) this;
		}

		public Criteria andFilenameNotBetween(String value1, String value2) {
			addCriterion("filename not between", value1, value2, "filename");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(String value) {
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(String value) {
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(String value) {
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(String value) {
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("status like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("status not like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<String> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<String> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andPercentIsNull() {
			addCriterion("percent is null");
			return (Criteria) this;
		}

		public Criteria andPercentIsNotNull() {
			addCriterion("percent is not null");
			return (Criteria) this;
		}

		public Criteria andPercentEqualTo(Double value) {
			addCriterion("percent =", value, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentNotEqualTo(Double value) {
			addCriterion("percent <>", value, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentGreaterThan(Double value) {
			addCriterion("percent >", value, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentGreaterThanOrEqualTo(Double value) {
			addCriterion("percent >=", value, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentLessThan(Double value) {
			addCriterion("percent <", value, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentLessThanOrEqualTo(Double value) {
			addCriterion("percent <=", value, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentIn(List<Double> values) {
			addCriterion("percent in", values, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentNotIn(List<Double> values) {
			addCriterion("percent not in", values, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentBetween(Double value1, Double value2) {
			addCriterion("percent between", value1, value2, "percent");
			return (Criteria) this;
		}

		public Criteria andPercentNotBetween(Double value1, Double value2) {
			addCriterion("percent not between", value1, value2, "percent");
			return (Criteria) this;
		}

		public Criteria andSizeIsNull() {
			addCriterion("size is null");
			return (Criteria) this;
		}

		public Criteria andSizeIsNotNull() {
			addCriterion("size is not null");
			return (Criteria) this;
		}

		public Criteria andSizeEqualTo(Long value) {
			addCriterion("size =", value, "size");
			return (Criteria) this;
		}

		public Criteria andSizeNotEqualTo(Long value) {
			addCriterion("size <>", value, "size");
			return (Criteria) this;
		}

		public Criteria andSizeGreaterThan(Long value) {
			addCriterion("size >", value, "size");
			return (Criteria) this;
		}

		public Criteria andSizeGreaterThanOrEqualTo(Long value) {
			addCriterion("size >=", value, "size");
			return (Criteria) this;
		}

		public Criteria andSizeLessThan(Long value) {
			addCriterion("size <", value, "size");
			return (Criteria) this;
		}

		public Criteria andSizeLessThanOrEqualTo(Long value) {
			addCriterion("size <=", value, "size");
			return (Criteria) this;
		}

		public Criteria andSizeIn(List<Long> values) {
			addCriterion("size in", values, "size");
			return (Criteria) this;
		}

		public Criteria andSizeNotIn(List<Long> values) {
			addCriterion("size not in", values, "size");
			return (Criteria) this;
		}

		public Criteria andSizeBetween(Long value1, Long value2) {
			addCriterion("size between", value1, value2, "size");
			return (Criteria) this;
		}

		public Criteria andSizeNotBetween(Long value1, Long value2) {
			addCriterion("size not between", value1, value2, "size");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(LocalDateTime value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(LocalDateTime value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<LocalDateTime> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
			addCriterion("create_time not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
			addCriterion("update_time =", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
			addCriterion("update_time <>", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
			addCriterion("update_time >", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
			addCriterion("update_time >=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThan(LocalDateTime value) {
			addCriterion("update_time <", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
			addCriterion("update_time <=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
			addCriterion("update_time in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
			addCriterion("update_time not in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
			addCriterion("update_time not between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andLostIsNull() {
			addCriterion("lost is null");
			return (Criteria) this;
		}

		public Criteria andLostIsNotNull() {
			addCriterion("lost is not null");
			return (Criteria) this;
		}

		public Criteria andLostEqualTo(Boolean value) {
			addCriterion("lost =", value, "lost");
			return (Criteria) this;
		}

		public Criteria andLostNotEqualTo(Boolean value) {
			addCriterion("lost <>", value, "lost");
			return (Criteria) this;
		}

		public Criteria andLostGreaterThan(Boolean value) {
			addCriterion("lost >", value, "lost");
			return (Criteria) this;
		}

		public Criteria andLostGreaterThanOrEqualTo(Boolean value) {
			addCriterion("lost >=", value, "lost");
			return (Criteria) this;
		}

		public Criteria andLostLessThan(Boolean value) {
			addCriterion("lost <", value, "lost");
			return (Criteria) this;
		}

		public Criteria andLostLessThanOrEqualTo(Boolean value) {
			addCriterion("lost <=", value, "lost");
			return (Criteria) this;
		}

		public Criteria andLostIn(List<Boolean> values) {
			addCriterion("lost in", values, "lost");
			return (Criteria) this;
		}

		public Criteria andLostNotIn(List<Boolean> values) {
			addCriterion("lost not in", values, "lost");
			return (Criteria) this;
		}

		public Criteria andLostBetween(Boolean value1, Boolean value2) {
			addCriterion("lost between", value1, value2, "lost");
			return (Criteria) this;
		}

		public Criteria andLostNotBetween(Boolean value1, Boolean value2) {
			addCriterion("lost not between", value1, value2, "lost");
			return (Criteria) this;
		}

		public Criteria andUuidLikeInsensitive(String value) {
			addCriterion("upper(uuid) like", value.toUpperCase(), "uuid");
			return (Criteria) this;
		}

		public Criteria andBatchIdLikeInsensitive(String value) {
			addCriterion("upper(batch_id) like", value.toUpperCase(), "batchId");
			return (Criteria) this;
		}

		public Criteria andFilenameLikeInsensitive(String value) {
			addCriterion("upper(filename) like", value.toUpperCase(), "filename");
			return (Criteria) this;
		}

		public Criteria andStatusLikeInsensitive(String value) {
			addCriterion("upper(status) like", value.toUpperCase(), "status");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table import_progress
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table import_progress
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}